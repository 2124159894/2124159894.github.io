<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/2022/06/12/CSS%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul>
<li>传统用HTML实现页面有很多不便的地方<ul>
<li>样式代码和内容代码放在一起的,显得杂乱,不易阅读</li>
<li>无法实现更好的效果</li>
</ul>
</li>
<li>HTML与CSS之间的关系<ul>
<li>HTML只负责页面的内容</li>
<li>CSS负责美化页面</li>
</ul>
</li>
</ul>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ul>
<li>层叠样式表-(cascading style sheet)<ul>
<li><strong>层叠</strong>:CSS的一个特性</li>
<li><strong>样式</strong>:指标签的外观部分,比如尺寸,颜色,形状,字体等</li>
<li><strong>表</strong>:CSS的代码书写的表现形式类似于一张表</li>
</ul>
</li>
<li>作用:书写CSS代码用于美化页面</li>
</ul>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li><p>CSS代码还是写在HTML页面里面</p>
</li>
<li><p>3种使用方式</p>
<ul>
<li><p><code>嵌入</code>:利用每个标签自带的<code>style</code>属性来设置样式</p>
</li>
<li><p><code>内联</code>:在<code>&lt;head&gt;&lt;/head&gt;</code>中添加<code>&lt;style&gt;&lt;/style&gt;</code>来写CSS代码</p>
</li>
<li><p><code>外联</code>:创建一个以<code>.css</code>为后缀的文件,在文件中书写<code>CSS</code>代码,在HTML页面中<code>&lt;head&gt;&lt;/head&gt;</code>中通过<code>&lt;link href=&quot;css文件路径&quot;&gt;</code>引入CSS文件</p>
<pre><code class="html">&lt;img src=&quot;&quot; style=&quot;css代码&quot;&gt;

&lt;style&gt;
    css代码
&lt;/style&gt;

&lt;link href=&quot;css文件地址&quot;/&gt;
</code></pre>
</li>
</ul>
</li>
</ul>
<h3 id="CSS代码书写格式"><a href="#CSS代码书写格式" class="headerlink" title="CSS代码书写格式"></a>CSS代码书写格式</h3><ul>
<li><p>CSS代码由选择器和属性代码构成</p>
<pre><code class="css">标签选择器&#123;
    css属性名:属性值;
&#125;
</code></pre>
</li>
<li><p>CSS会通过标签选择器来找到需要设置样式的标签,设置对应的的样式(<code>CSS属性</code>)</p>
</li>
</ul>
<h3 id="CSS注释"><a href="#CSS注释" class="headerlink" title="CSS注释"></a>CSS注释</h3><ul>
<li>&#x2F;*注释内容*&#x2F;</li>
</ul>
<h3 id="CSS基础属性"><a href="#CSS基础属性" class="headerlink" title="CSS基础属性"></a>CSS基础属性</h3><ul>
<li><p>文字类</p>
<ul>
<li><p><code>color</code>:设置标签的文本颜色</p>
</li>
<li><p><code>font-size</code>:设置字体大小,默认是跟浏览器有关,一般为<code>16px</code></p>
</li>
<li><p><code>font-family</code>:设置标签字体的字体样式,默认字体是系统有关</p>
</li>
<li><p><code>text-decoration</code>:设置文本的样式,默认超链接有下划线</p>
<ul>
<li><code>underline</code>:下划线,超链接默认</li>
<li><code>none</code>:删除样式</li>
<li><code>line-through</code>:类似删除线</li>
</ul>
</li>
<li><p><code>text-align</code>:设置标签内部内容的对齐方式<code>left</code>,<code>center</code>,<code>right</code></p>
</li>
<li><p><code>font-weight</code>:设置标签文字的粗细程度,可以取数字&#x3D;&#x3D;100~900&#x3D;&#x3D;,也可以使用<code>bold</code>,<code>bolder</code>,默认<code>normal</code></p>
<pre><code class="css">font-weight:300 | bold | bolder
</code></pre>
</li>
<li><p><code>line-height</code>:设置标签一行内容的高度,简称&#x3D;&#x3D;行高&#x3D;&#x3D;,标签里的一行内容会显示在行高的中间</p>
<ul>
<li>&#x3D;&#x3D;文字垂直居中&#x3D;&#x3D;:设置行高为和标签的高度一致</li>
</ul>
</li>
<li><p><code>@font-face</code>:自定义字体</p>
<ul>
<li>计算机每种字体就有自己的字体模板文件,一般后缀名是<code>.ttf</code>,<code>.fon</code>类的文件</li>
<li>可以通过<code>@font-face</code>引入文件成为自定义字体</li>
</ul>
<pre><code class="css">/*引入了字体,并且设置了该字体的名字*/
@font-face&#123;
    font-family:&quot;字体的名字&quot;,
    src:url(&quot;字体文件的路径&quot;)
&#125;
/*使用*/
p&#123;
    font-family:&quot;z&quot;
&#125;
</code></pre>
</li>
</ul>
</li>
<li><p>尺寸类</p>
<ul>
<li><code>width</code>:设置标签的宽度,以&#x3D;&#x3D;像素&#x3D;&#x3D;或&#x3D;&#x3D;百分比&#x3D;&#x3D;为单位</li>
<li><code>height</code>:设置标签的高度,以&#x3D;&#x3D;像素&#x3D;&#x3D;或&#x3D;&#x3D;百分比&#x3D;&#x3D;为单位</li>
<li><code>border</code>:设置标签的边框,需要设置边框的&#x3D;&#x3D;宽度&#x3D;&#x3D;,&#x3D;&#x3D;样式&#x3D;&#x3D;,&#x3D;&#x3D;颜色&#x3D;&#x3D;<ul>
<li><code>border:1px solid red</code>:1px的红色实线边框</li>
<li><code>border-left</code>:<code>1px dashed red</code>:单独设置左边框</li>
<li><code>border-right</code>:单独设置右边框</li>
<li><code>border-top</code>:单独设置下边框</li>
<li><code>border-bottom</code>:单独设置上边框</li>
</ul>
</li>
<li><code>padding</code>:</li>
</ul>
</li>
<li><p>背景类</p>
<ul>
<li><p><code>background-color</code>:设置背景颜色</p>
</li>
<li><p><code>background-image</code>:设置某个标签的背景图片</p>
<pre><code class="css">选择器&#123;
    background-image:url(&quot;图片路径&quot;)
&#125;
</code></pre>
</li>
<li><p><code>background-size:cover</code>:设置背景图片拉伸</p>
</li>
<li><p><code>background-position</code>:设置背景图片的显示位置,分为<code>x</code>轴和<code>y</code>轴</p>
</li>
<li><p><code>background-repeat</code>:设置背景图片是否&#x3D;&#x3D;平铺&#x3D;&#x3D;,默认是平铺(<code>repeat</code>),不平铺(<code>no-repeat</code>)</p>
</li>
</ul>
</li>
<li><p>列表类</p>
<ul>
<li><p><code>list-style-type</code>:设置每个列表项的图标样式,默认是<code>circle</code>,即小圆点,如果为<code>none</code>,则没有图标样式,是给<code>ul</code>设置的</p>
</li>
<li><p><code>list-style-image</code>:设置列表项的图标为指定的图片,给<code>ul</code>设置的</p>
</li>
<li><p><code>list-style-position</code>:设置列表项图标的位置,内部或外部,不能设置具体的<code>x</code>或<code>y</code>坐标</p>
</li>
<li><p><code>list-style</code>: 一个快捷的组合属性,可以同时设置<code>list-style-type</code>,<code>list-style-image</code>,<code>list-style-position</code></p>
<pre><code class="css">list-style-image:url(&quot;图片地址&quot;);
list-style-type:lower-roman;//d
list-style-position:inside;
list-style:url(&quot;图片地址&quot;) inside lower-roman;//统一设置
</code></pre>
</li>
</ul>
</li>
<li><p>其他类</p>
<ul>
<li><p><code>margin:0 auto;</code>:&#x3D;&#x3D;特殊用法&#x3D;&#x3D;:用于将某个标签相对页面水平居中</p>
</li>
<li><p><code>outline:none</code>:取消浏览器默认边框,针对&#x3D;&#x3D;表单元素&#x3D;&#x3D;</p>
</li>
<li><p><code>display</code>: 设置标签的显示模式,块级元素(<code>block</code>),行内块级元素(<code>inline-block</code>),行内元素(<code>inline</code>),隐藏(<code>none</code>)</p>
<pre><code class="css">display:block;
display:inline-block;
</code></pre>
</li>
<li><p><code>vertical-align</code>:用于设置行内元素的垂直对齐方式,<code>middle</code>是居中</p>
<pre><code class="css">vertical-align:middle;
</code></pre>
</li>
<li><p><code>cursor</code>:设置鼠标样式 小手:<code>pointer</code></p>
<pre><code class="css">cursor:pointer;
</code></pre>
</li>
<li><p><code>opacity</code>:设置标签的透明度,范围为<code>0~1</code>,<code>0</code>为完全透明,<code>1</code>完全不透明</p>
</li>
</ul>
</li>
<li><p><code>color</code>,<code>font-size</code>属性对标签以及其子标签都有效果</p>
<pre><code class="css">body&#123;
    color:white;
    width:100px;
    height:50%;
&#125;
</code></pre>
</li>
</ul>
<h3 id="CSS基础选择器"><a href="#CSS基础选择器" class="headerlink" title="CSS基础选择器"></a>CSS基础选择器</h3><ul>
<li><p>标签选择器</p>
<pre><code class="css">标签名&#123;
    css属性名1:属性值1;
&#125;
例如:
body&#123;
    background-color:balck;
&#125;
效果:对页面所有的body设置背景颜色为黑色
</code></pre>
<ul>
<li>会对页面上所有同类型的标签设置样式</li>
<li>&#x3D;&#x3D;应用&#x3D;&#x3D;:给同类型标签设置通用属性</li>
</ul>
</li>
<li><p>id选择器</p>
<ul>
<li><p>能够对<code>单独的某个标签</code>设置样式</p>
</li>
<li><p>步骤</p>
<ul>
<li>给需要单独设置样式的标签添加<code>id</code>属性</li>
<li>利用&#x3D;&#x3D;CSS&#x3D;&#x3D;的<code>id</code>选择器来设置样式</li>
</ul>
<pre><code class="css">html:
&lt;td id=&quot;logo&quot;&gt;&lt;/td&gt;
css:
#id属性值(
    css属性名1:属性值1;
)
例子:
#logo(
    text-align:left;
)
效果:会对id属性为logo的标签设置其内容左对齐
</code></pre>
</li>
<li><p>同一个页面不允许有一样的<code>id</code>属性</p>
</li>
</ul>
</li>
<li><p>class选择器</p>
<ul>
<li><p>对具有&#x3D;&#x3D;相同&#x3D;&#x3D;<code>class</code>属性的&#x3D;&#x3D;多个标签&#x3D;&#x3D;同时设置样式</p>
</li>
<li><p>步骤</p>
<ul>
<li>给需要设置样式的这些标签设置一样的<code>class</code>属性,<code>class</code>属性每个标签都可以设置</li>
<li>利用<code>class</code>选择器来进行设置</li>
</ul>
<pre><code class="css">.class属性值&#123;
    css属性名1:属性值1;
&#125;
例子:
.demo&#123;
    color:white;
&#125;
效果:对class属性为demo的所有标签设置文字颜色为白色
</code></pre>
<ul>
<li>特别适合页面上多个标签有相同的样式的情况</li>
</ul>
</li>
</ul>
</li>
<li><p>组合选择器</p>
<ul>
<li><p><strong>概念</strong>:&#x3D;&#x3D;同时使用&#x3D;&#x3D;<code>id</code>,<code>class</code>,<code>标签</code>选择器中的一种或多种,来达到给多个标签设置样式的目的</p>
</li>
<li><p><strong>作用</strong>:减少不必要的<code>class</code>代码</p>
</li>
<li><p><strong>思路</strong>:利用标签的嵌套关系来精确寻找需要设置样式的标签</p>
</li>
<li><p><strong>例子</strong></p>
<pre><code class="css">找到所有table标签里的a标签,字体颜色为白色
table a&#123;
    color:white;
&#125;
找到所有的body标签下的class为item的标签,字体颜色为红色
body .item&#123;
    color:red;
&#125;
</code></pre>
</li>
</ul>
</li>
<li><p>伪类选择器</p>
<ul>
<li><p>根据用户鼠标的行为来改变标签的样式</p>
</li>
<li><p>分类</p>
<ul>
<li><code>a:link</code>:超链接专属,页面一打开超链接就有的样式,旧属性(不使用了)</li>
<li><code>a:visited</code>:超链接专属,超链接被访问之后的样式</li>
<li><code>:hover</code>:鼠标悬停到标签上时标签使用的样式</li>
<li><code>:active</code>:鼠标点击标签不放时使用的样式</li>
<li><code>:focus</code>:当标签获取焦点时使用的样式,比如点击输入框</li>
</ul>
</li>
<li><p>使用语法</p>
<pre><code class="css">a:link&#123;
    css属性名1:属性值1;
&#125;
a:visited&#123;
    css属性名1:属性值1;
&#125;
非伪类选择器:hover&#123;
    css属性名1:属性值1;
&#125;
非伪类选择器:active&#123;
    css属性名1:属性值1;
&#125;
非伪类选择器:focus&#123;
    css属性名1:属性值1;
&#125;
</code></pre>
</li>
</ul>
</li>
</ul>
<h3 id="选择器命令规范"><a href="#选择器命令规范" class="headerlink" title="选择器命令规范"></a>选择器命令规范</h3><ul>
<li><p><code>id</code>属性,<code>class</code>属性</p>
<ul>
<li>尽量能体现标签的作用</li>
<li>不能以数字开头</li>
</ul>
<pre><code class="html">&lt;a id=&quot;head-logo&quot;&gt;&lt;/a&gt;
</code></pre>
</li>
</ul>
<h3 id="CSS技巧"><a href="#CSS技巧" class="headerlink" title="CSS技巧"></a>CSS技巧</h3><ul>
<li>用&#x3D;&#x3D;极小&#x3D;&#x3D;的&#x3D;&#x3D;图片&#x3D;&#x3D;配合<code>background-repeat</code>实现整个的背景图</li>
</ul>
<h3 id="HTML标签的显示模式"><a href="#HTML标签的显示模式" class="headerlink" title="HTML标签的显示模式"></a>HTML标签的显示模式</h3><ul>
<li>块级元素:<code>block</code><ul>
<li>指的是独占一行的标签:<code>p</code>,<code>h1~h6</code>,<code>table</code>,<code>tr</code>,<code>ul</code>,<code>ol</code>,<code>dl</code>,<code>li</code>,<code>hr</code></li>
</ul>
</li>
<li>行内块级元素:<code>inline-block</code><ul>
<li>指的是同行显示,但&#x3D;&#x3D;可以设置宽高&#x3D;&#x3D;的标签:<code>input</code>,<code>textarea</code>,<code>select</code>,<code>button</code>,<code>img</code></li>
</ul>
</li>
<li>行内元素:<code>inline</code><ul>
<li>指的是可以同行显示的标签:<code>a</code>,<code>span</code>,<code>input</code>,<code>textarea</code>,<code>select</code>,<code>button</code>,<code>img</code></li>
<li>行内元素中<code>a</code>和<code>span</code>是默认不能设置&#x3D;&#x3D;宽高&#x3D;&#x3D;的</li>
</ul>
</li>
<li>显示模式可以通过<code>display</code>来进行转换</li>
</ul>
<p>&#x3D;&#x3D;第69课&#x3D;&#x3D;</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/06/11/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;
</code></pre>
<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server
</code></pre>
<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate
</code></pre>
<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy
</code></pre>
<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
  </entry>
</search>
